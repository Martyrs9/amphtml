workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "27e3f51cd06a57f479f653b9a9ad15455abf79a744bddd015ead588f7d68d24b",
    strip_prefix = "abseil-cpp-1d508979fc25bfa1029d133ce0c13f0e3e3c1338",
    urls = ["https://github.com/abseil/abseil-cpp/archive/1d508979fc25bfa1029d133ce0c13f0e3e3c1338.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "b58d2ebdf77524affe4386536fa4e75ceb81699c530297e395e777b682421017",
    strip_prefix = "googletest-504ea69cf7e9947be54f808a09b7b08988e84b5f",
    urls = ["https://github.com/google/googletest/archive/504ea69cf7e9947be54f808a09b7b08988e84b5f.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "ec4386538b962869b1a9cf69f22a8d0f48430276732eca30178c5955e64ead53",
    strip_prefix = "protobuf-cc6baf265e4cb5599e319906f8fb8dbf198c9c29",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/cc6baf265e4cb5599e319906f8fb8dbf198c9c29.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "8fb0dda322a07d83d39d0375862c327de7316f66b6c464d69271e8e5e9478678",
    strip_prefix = "gflags-58cf1ef6d038e007c6b96aeda453503b59ffef8f",
    urls = ["https://github.com/gflags/gflags/archive/58cf1ef6d038e007c6b96aeda453503b59ffef8f.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "566f95b2427efc0ef8926d2df167cc77ccba55c06f206abc02e8c17081fa5ffd",
    strip_prefix = "re2-6dcd83d60f7944926bfd308cc13979fc53dd69ca",
    urls = ["https://github.com/google/re2/archive/6dcd83d60f7944926bfd308cc13979fc53dd69ca.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "5397bea4b3ddd6cc839cb755f773d85c27f554529590ab20dd50b9e46ca0cd81",
    strip_prefix = "rules_cc-2128347b4ee2024536016ee4a28b7d3a98260f46",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/2128347b4ee2024536016ee4a28b7d3a98260f46.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "03c8d2df1ec7e8f7202795310cff07ee0c02afee4f949ea293507f8dc9dc22f0",
    strip_prefix = "rules_proto-4904e1ca79182d5a3779ecbd23273285ccd70e5c",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/4904e1ca79182d5a3779ecbd23273285ccd70e5c.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/4904e1ca79182d5a3779ecbd23273285ccd70e5c.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "8cd4ff3578ca1f3109d59f033a506881220de36464c655505fd325267e735940",
    strip_prefix = "emsdk-ce1d281ce65b5c7398b17ed6484efc6a3901df6f/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/ce1d281ce65b5c7398b17ed6484efc6a3901df6f.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "303f99eb72c47a23a28b8bda1b2c5c14fae4f81788667fb36513a8ab5aaa02a7",
    strip_prefix = "closure-library-b312823ec5f84239ff1db7526f4a75cba0420a33",
    urls = ["https://github.com/google/closure-library/archive/b312823ec5f84239ff1db7526f4a75cba0420a33.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "12f1169ebe782f8631fcb8da81aa12ba192f8952875b4a1e8f20c49fc6e10223",
    strip_prefix = "rules_closure-0.14.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.14.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.14.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
